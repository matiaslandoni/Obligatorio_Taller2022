  - name: Add EPEL repository
    yum:
      name: epel-release
      state: present

  - name: Install basic packages
    package:
      name: ['vim','bash-completion','tmux','tree','htop','wget','unzip','curl','git','tar']
      state: present

  - name: Install Java 8 CentOS
    yum:
      name: java-1.8.0-openjdk
      state: present

  - name: Add tomcat group
    group:
      name: tomcat

  - name: Add "tomcat" user
    user:
      name: tomcat
      group: tomcat
      home: /usr/share/tomcat
      createhome: no
      system: yes

  - name: Download Tomcat
    get_url:
      url: https://archive.apache.org/dist/tomcat/tomcat-9/v{{ tomcat_ver }}/bin/apache-tomcat-{{ tomcat_ver }}.tar.gz
      dest: /tmp/apache-tomcat-{{ tomcat_ver }}.tar.gz

  - name: Create a tomcat directory
    file:
      path: /opt/tomcat
      state: directory
      owner: tomcat
      group: tomcat

  - name: Extract tomcat archive
    unarchive:
      src: /tmp/apache-tomcat-{{ tomcat_ver }}.tar.gz
      dest: /opt/tomcat
      owner: tomcat
      group: tomcat
      remote_src: yes
      extra_opts: "--strip-components=1"
      creates: /opt/tomcat/bin

  - name: Copy tomcat service file
    template:
      src: templates/tomcat.service.j2
      dest: /etc/systemd/system/tomcat.service
    when: ansible_service_mgr == "systemd"

  - name: Start and enable tomcat
    service:
      daemon_reload: yes
      name: tomcat
      state: started
      enabled: yes
    when: ansible_service_mgr == "systemd"

  - name: Start and enable firewalld
    service:
      name: firewalld
      state: started
      enabled: yes
    when: ansible_service_mgr == "systemd"

  - name: Open tomcat port on the firewall
    firewalld:
      port: 8080/tcp
      permanent: true
      state: enabled
      immediate: yes
    when: ansible_service_mgr == "systemd"

  - name: Set UI access credentials
    template:
      src: tomcat-users.xml.j2
      dest: /opt/tomcat/conf/tomcat-users.xml
    
  - name: Allow access to Manager and Host Manager apps from any IP
    template:
      src: context.xml.j2 
      dest: "{{ item }}"
    with_items:
      - /opt/tomcat/webapps/host-manager/META-INF/context.xml
      - /opt/tomcat/webapps/manager/META-INF/context.xml
  
  - name: Restart service tomcat
    ansible.builtin.service:
      name: tomcat
      state: restarted
   